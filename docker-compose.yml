version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}
  mysql_data: {}

networks:
  back-tier:
    driver: bridge

services:
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: poc-db
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - back-tier
  redis:
    image: redis:6.2-alpine
    networks:
      - back-tier
  app:
    container_name: "hyperf-example-app"
    image: hyperf/hyperf:8.1-alpine-v3.15-swoole
    working_dir: /app
    tty: true
    volumes:
      - '.:/app'
    networks:
      - back-tier
    ports:
      - "9501:9501"
    environment:
      # APP
      APP_NAME: 'poc-hyperf-observability'
      # Trace
      ZIPKIN_ENDPOINT_URL: 'http://collector:9412/api/v2/spans'
      # Redis
      REDIS_HOST: 'redis'
      # Database
      DB_HOST: 'mysql'
      DB_DATABASE: 'poc-db'
      DB_USERNAME: 'admin'
      DB_PASSWORD: 'password'
    depends_on:
      - collector
      - prometheus
      - redis
      - mysql
  collector:
    image: otel/opentelemetry-collector-contrib:0.39.0
    volumes:
      - './docker/collector/config.yaml:/etc/otel/config.yaml'
    networks:
      - back-tier
    ports:
      - '4317:4317'
    depends_on:
      - zipkin
  zipkin:
    image: openzipkin/zipkin-slim
    networks:
      - back-tier
    ports:
      - '9411:9411'
  jaeger:
    image: jaegertracing/all-in-one:latest
    networks:
      - back-tier
    ports:
      - "16686:16686"
  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - './docker/prometheus/:/etc/prometheus/'
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - back-tier
    restart: always
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./docker/grafana/config.monitoring
    networks:
      - back-tier
    restart: always

